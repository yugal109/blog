# Generated by Django 3.2.4 on 2021-08-21 14:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('commentId', models.UUIDField(default=uuid.uuid4, help_text='Example: c8daa3ac-3dd0-44e9-ba2a-b0cbd1c8d8ae.', primary_key=True, serialize=False, unique=True)),
                ('comment', models.CharField(max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('likes', models.ManyToManyField(blank=True, related_name='commentliking', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('profileId', models.UUIDField(default=uuid.uuid4, help_text='Example: c8daa3ac-3dd0-44e9-ba2a-b0cbd1c8d8ae.', primary_key=True, serialize=False, unique=True)),
                ('image', models.CharField(default='https://moonvillageassociation.org/wp-content/uploads/2018/06/default-profile-picture1.jpg', max_length=250)),
                ('bio', models.CharField(max_length=250)),
                ('accountType', models.CharField(choices=[('public', 'public'), ('private', 'private')], default='public', max_length=8)),
                ('followers', models.ManyToManyField(blank=True, related_name='following', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Replies',
            fields=[
                ('replyId', models.UUIDField(default=uuid.uuid4, help_text='Example: c8daa3ac-3dd0-44e9-ba2a-b0cbd1c8d8ae.', primary_key=True, serialize=False, unique=True)),
                ('reply', models.CharField(max_length=500)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blogapp.comments')),
                ('likes', models.ManyToManyField(blank=True, related_name='replyliking', to=settings.AUTH_USER_MODEL)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blogapp.profile')),
            ],
            options={
                'verbose_name': 'Replies',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('postId', models.UUIDField(default=uuid.uuid4, help_text='Example: c8daa3ac-3dd0-44e9-ba2a-b0cbd1c8d8ae.', primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(max_length=100)),
                ('blog', tinymce.models.HTMLField()),
                ('imageURL', models.CharField(max_length=250)),
                ('time', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('likes', models.ManyToManyField(blank=True, related_name='liking', to=settings.AUTH_USER_MODEL)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blogapp.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('notificationId', models.UUIDField(default=uuid.uuid4, help_text='Example: c8daa3ac-3dd0-44e9-ba2a-b0cbd1c8d8ae.', primary_key=True, serialize=False, unique=True)),
                ('notification_type', models.CharField(choices=[('comment', 'comment'), ('reply', 'reply'), ('likepost', 'likepost'), ('likecomment', 'likecomment'), ('likereply', 'likereply')], max_length=20)),
                ('is_viewed', models.BooleanField(blank=True, default=False, null=True)),
                ('created_at', models.DateTimeField(auto_now=True, null=True)),
                ('acceptor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='acceptor', to='blogapp.profile')),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='blogapp.comments')),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='blogapp.post')),
                ('reactor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reactor', to='blogapp.profile')),
                ('reply', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='blogapp.replies')),
            ],
        ),
        migrations.CreateModel(
            name='FollowRequest',
            fields=[
                ('followrequestId', models.UUIDField(default=uuid.uuid4, help_text='Example: c8daa3ac-3dd0-44e9-ba2a-b0cbd1c8d8ae.', primary_key=True, serialize=False, unique=True)),
                ('status', models.CharField(choices=[('pending', 'pending'), ('accepted', 'accepted')], default='pending', max_length=20)),
                ('request_acceptor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='request_acceptor', to='blogapp.profile')),
                ('requestor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='requestor', to='blogapp.profile')),
            ],
        ),
        migrations.AddField(
            model_name='comments',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blogapp.post'),
        ),
        migrations.AddField(
            model_name='comments',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blogapp.profile'),
        ),
    ]
